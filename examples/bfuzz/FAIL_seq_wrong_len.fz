function seq
  forall (A, n : size, p : space)
    (l :[p] list(fuzzy A)[n])
  : fuzzy list(A)[n] {
  listcase l of fuzzy list(A)[n] {
    [] => return[p] (nil@[A] ())
    | x :: l'[n'] =>
      sample y = x;
      sample ys = seq@[A][n'][p] l';
      return[p] (cons@[A][n'] y (cons@[A][n'] y ys))
  }
}

seq